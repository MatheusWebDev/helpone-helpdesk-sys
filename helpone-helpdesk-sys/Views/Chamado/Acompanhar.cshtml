@model helpone_helpdesk_sys.Models.Chamados.Chamado

@{
	ViewBag.Title = "Acompanhar chamado";
}

<h2 class="mb-2 mt-5 border-bottom pb-3">#@Html.DisplayFor(model => model.Id) - @Html.DisplayFor(model => model.Titulo)</h2>
<div>
	<div class="d-flex justify-content-between align-items-center">
		<ol class="breadcrumb bg-transparent m-0 px-0">
			<li class="breadcrumb-item">@Html.DisplayFor(model => model.Subtopico.Topico.Titulo) > @Html.DisplayFor(model => model.Subtopico.Titulo) - @Html.DisplayFor(model => model.Status)</li>
		</ol>
		@Html.ActionLink("Voltar para lista", "Index", "Chamado", new { area = "" }, new { @class = "btn btn-info btn-sm", role = "button" })
	</div>
	<div class="d-flex justify-content-between align-items-center pt-2">
		<h4 class="h5 mb-0">Acompanhamento do chamado</h4>
		<div>
			<a href="@Url.Action("Editar", new { id = Model.Id })" class="btn btn-info ml-2" role="button">
				<i class="fas fa-edit mr-1"></i>
				Editar Chamado
			</a>
			<!-- Button trigger cancelarModal -->
			<button type="button" class="btn btn-info" data-toggle="modal" data-target="#cancelarModal">
				<i class="fas fa-times mr-1"></i>
				Cancelar Chamado
			</button>
		</div>
	</div>

	@foreach (var item in Model.Conteudos)
	{
		<div class="chamado-box d-flex py-4">
			<div class="user-profile-box text-center mr-3 px-2">
				@Html.DisplayNameFor(modelItem => item.Usuario)
				<br />
				@Html.DisplayFor(modelItem => item.Usuario.Login)
			</div>
			<div class="chamado-content flex-grow-1 text-right">
				<div class="content-chamado d-flex justify-content-between text-left px-4 py-3 border">
					@Html.DisplayFor(modelItem => item.ConteudoChamado)
				</div>
			</div>
		</div>
	}

	<a class="btn btn-success mb-2" data-toggle="collapse" href="#feedbackCollapse" role="button" aria-expanded="false" aria-controls="collapseExample">
		Finalizar chamado
	</a>
	<div class="collapse" id="feedbackCollapse">
		<div class="card card-body">
			@using (Html.BeginForm("Finalizar", "Chamado", new { id = Model.Id }))
			{
				@Html.AntiForgeryToken()
				<div id="feedbackForm" class="d-flex flex-column">
					<div class="d-flex mb-3">
						<div id="util">
							<p class="h5">Esse artigo foi útil?</p>
							@*@Html.EditorFor(model => model.Feedback.SolucaoFoiUtil, new { htmlAttributes = new { @class = "form-control" } })*@
							<div class="form-check form-check-inline">
								<input class="form-check-input" type="radio" name="SolucaoFoiUtil" id="inlineS1" value="true">
								<label class="form-check-label" for="inlineS1">
									<button type="button" class="btn btn-success"><i class="fas fa-thumbs-up"></i></button>
								</label>
							</div>
							<div class="form-check form-check-inline">
								<input class="form-check-input" type="radio" name="SolucaoFoiUtil" id="inlineS2" value="false">
								<label class="form-check-label" for="inlineS2">
									<button type="button" class="btn btn-danger"><i class="fas fa-thumbs-down"></i></button>
								</label>
							</div>
						</div>
						<div id="nivel" class="ml-5">
							<p class="h5">Qão satisfeito com atendimento?</p>
							@*@Html.EditorFor(model => model.Feedback.SolucaoFoiUtil, new { htmlAttributes = new { @class = "form-control" } })*@
							<div class="form-check form-check-inline">
								<input class="form-check-input" type="radio" name="NivelSatisfacao" id="inlineN1" value="1">
								<label class="form-check-label" for="inlineN1">1</label>
							</div>
							<div class="form-check form-check-inline">
								<input class="form-check-input" type="radio" name="NivelSatisfacao" id="inlineN2" value="2">
								<label class="form-check-label" for="inlineN2">2</label>
							</div>
							<div class="form-check form-check-inline">
								<input class="form-check-input" type="radio" name="NivelSatisfacao" id="inlineN3" value="3">
								<label class="form-check-label" for="inlineN3">3</label>
							</div>
						</div>
					</div>
					<div class="form-group">
						<label for="Mensagem" class="h5">Feedback</label>
						<textarea class="form-control" id="Mensagem" name="Mensagem" rows="6"></textarea>
						@Html.ValidationMessageFor(model => model.Feedback.Mensagem, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="form-actions no-color">
					<input type="submit" value="Enviar" class="btn btn-success" />
				</div>
			}
		</div>
	</div>

</div>

<!-- CancelarModal -->
<div class="modal fade" id="cancelarModal" tabindex="-1" role="dialog" aria-labelledby="cancelarModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="cancelarModalLabel">Cancelar chamado: #@Html.DisplayFor(model => model.Id) - @Html.DisplayFor(model => model.Titulo)</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body text-center">
				Tem certeza que gostaria de cancelar este chamado ?
				<br />
				@using (Html.BeginForm("Cancelar", "Chamado", new { id = Model.Id }))
				{
					@Html.AntiForgeryToken()
					<div class="form-actions no-color">
						<input type="submit" value="Sim" class="btn btn-link text-success" />
						<button type="button" class="btn btn-link text-danger" data-dismiss="modal">Não</button>
					</div>
				}
			</div>
		</div>
	</div>
</div>
